name: "Join Multiple Jobs"
description: "This action will fail if any of the monitored jobs fail."

inputs:
  # job_names:
  #   required: true
  #   type: string
  #   description: "A comma-separate list of "
  github_token:
    description: The Github token to authenticate PR operations.
    required: true


runs:
  using: composite
  steps:
    - name: Check Previous Jobs
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        # By the time this action runs, all of the depdendent jobs should have a status of completed or cancelled.

        # DEBUG BEGIN
        echo "Start previous job check"
        echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}"
        echo "GITHUB_RUN_ID: ${GITHUB_RUN_ID}"
        echo "GITHUB_RUN_ATTEMPT: ${GITHUB_RUN_ATTEMPT}"
        echo "GITHUB_JOB: ${GITHUB_JOB}"
        # DEBUG END

        # Retrieve the jobs for the current run.
        jobs_json="$( 
          gh api "/repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${GITHUB_RUN_ATTEMPT}/jobs" 
        )"

        # DEBUG BEGIN
        echo "jobs_json:"$'\n'"${jobs_json}"
        # DEBUG END

        conclusion_check="$(
          # Excluding this job, be sure that all of the other jobs have a conclusion of 'success'.
          echo "${jobs_json}" | jq '.jobs | map(select(.name != '"${GITHUB_JOB}"')) | all(.conclusion == "success") '
        )"

        [[ "${conclusion_check}" == true ]] && exit

        echo >&2 "Unsuccessful jobs:"
        # Excluding this job, be sure that all of the other jobs have a conclusion of 'success'.
        echo "${jobs_json}" | jq '.jobs | map(select(.name != '"${GITHUB_JOB}"')) | map(select(.conclusion != "success")) | map({id, name, status, conclusion}) '
